<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
       
    <bean id="personBean" class="com.carina.spring.vedioTest.DI.service.PersonBean" init-method="init" destroy-method="destroy" scope="prototype"></bean>
	<bean id="personBean2" class="com.carina.spring.vedioTest.DI.service.PersonBean2"></bean>
	
	
	<!-- don't forget the DataSource -->
    <!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/postgres"/>
        <property name="username" value="postgres"/>
        <property name="password" value="root"/>
    </bean> -->
	
<!-- <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
	<bean id="appEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="persistenceUnitName" value="appPU" />
    <property name="packagesToScan" value="com.spring.chapter5.mvc.spittr.daoImpl" />
    </bean>

	
     <bean id="spitterRepository" class="com.spring.chapter5.mvc.spittr.daoImpl.JpaSpitterRepositoryImpl"></bean>

    the transactional advice (what 'happens'; see the <aop:advisor/> bean below)
    <tx:advice id="txAdvice" transaction-manager="txManager">
        the transactional semantics...
        <tx:attributes>
            all methods starting with 'get' are read-only
            <tx:method name="get*" read-only="true"/>
            other methods use the default transaction settings (see below)
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    ensure that the above transactional advice runs for any execution
        of an operation defined by the FooService interface
    <aop:config>
        <aop:pointcut id="fooServiceOperation" expression="execution(* com.spring.chapter5.mvc.spittr.dao.SpitterRepository.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/>
    </aop:config>

    similarly, don't forget the PlatformTransactionManager
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean> -->
</beans>